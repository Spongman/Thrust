{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","ball.ts","base.ts","box.ts","boxEntity.ts","bullet.ts","checkpoint.ts","ellipse.ts","enemy.ts","entity.ts","explosion.ts","fuel.ts","game.ts","level.ts","main.ts","particle.ts","reactor.ts","rod.ts","ship.ts","star.ts","vec2.ts"],"names":[],"mappings":"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","file":"bundle.js","sourceRoot":"/source/","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/////// <reference path=\"entity.ts\"/>\n/////// <reference path=\"ship.ts\"/>\n\nexport const BALL_RADIUS = 10;\n\nimport { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Game } from './game';\n\nvar i = 3;\n\nexport class Ball extends Entity\n{\n\tinvincible = true;\n\n\tconstructor(public ballColor: p5.Color)\n\t{\n\t\tsuper(new Vec2(0, 0), BALL_RADIUS);\n\t}\n\n\treset(pos: Vec2)\n\t{\n\t\tthis.invincible = true;\n\t\tthis.p = pos;\n\t}\n\n\tdraw()\n\t{\n\t\tnoFill();\n\t\tstroke(this.ballColor);\n\t\tellipse(this.p.x, this.p.y, BALL_RADIUS * 2, BALL_RADIUS * 2);\n\t}\n\n\tdamage(_friendly: boolean)\n\t{\n\t\tif (!this.invincible)\n\t\t\tGame.ship.die();\n\t\treturn false;\n\t}\n}\n","/////// <reference path=\"boxEntity.ts\"/>\n/////// <reference path=\"level.ts\"/>\n\nimport { Vec2 } from './vec2';\nimport { BoxEntity } from './boxEntity';\nimport { Box } from './box';\nimport { TILE_SIZE } from './game';\n\nexport class Base extends BoxEntity\n{\n\tinvicible = false;\n\n\tconstructor(p: Vec2)\n\t{\n\t\tsuper(p, new Box(\n\t\t\tp.x + TILE_SIZE / 2 - 10, p.y + TILE_SIZE - 18,\n\t\t\tTILE_SIZE / 2, 18\n\t\t));\n\t}\n\n\tdraw()\n\t{\n\t\tstroke(255, 255, 0);\n\t\tnoFill();\n\n\t\tpush();\n\t\ttranslate(this.p.x + TILE_SIZE / 2, this.p.y + TILE_SIZE);\n\n\t\tbeginShape();\n\n\t\tvertex(-8, 0);\n\t\tvertex(-7, -2);\n\t\tvertex(-3, -3);\n\t\tvertex(-3, -12);\n\t\tvertex(-9, -14);\n        vertex(-8, -18);\n        bezierVertex(-4, -14, 4, -14, 8, -18);\n\t\t//vertex(-4, -16);\n\t\t//vertex(4, -16);\n\t\tvertex(8, -18);\n\t\tvertex(9, -14);\n\t\tvertex(3, -12);\n\t\tvertex(3, -3);\n\t\tvertex(7, -2);\n\t\tvertex(8, 0);\n\n\t\tendShape();\n\t\tpop();\n\t}\n}\n","import { Vec2 } from './vec2';\n\nexport class Box\n{\n\tconstructor(public readonly x: number, public readonly y: number, public readonly w: number, public readonly h: number)\n\t{\n\t}\n\n\tcollide(p: Vec2, r: number)\n\t{\n\t\treturn (\n\t\t\tp.x + r > this.x &&\n\t\t\tp.x - r < this.x + this.w &&\n\t\t\tp.y + r > this.y &&\n\t\t\tp.y - r < this.y + this.h\n\t\t);\n\t}\n}\n","///// <reference path=\"entity.ts\"/>\nimport { Vec2 } from './vec2';\nimport { Box } from './box';\nimport { Entity, EXPLOSION_DENSITY } from './entity';\nimport { Explosion } from './explosion';\n\nexport abstract class BoxEntity extends Entity\n{\n\tconstructor(p: Vec2, public readonly box: Box)\n\t{\n\t\tsuper(p, NaN);\n\t}\n\n\tcollide(p: Vec2, r: number)\n\t{\n\t\treturn this.box.collide(p, r);\n\t}\n\n\texplode()\n\t{\n\t\tconst q = sqrt(EXPLOSION_DENSITY);\n\t\tfor (let x = this.box.x; x < this.box.x + this.box.w; x += q)\n\t\t{\n\t\t\tfor (let y = this.box.y; y < this.box.y + this.box.h; y += q)\n\t\t\t\tExplosion.create(new Vec2(x, y), 0, 1);\n\t\t}\n\t}\n\n}\n","///// <reference path=\"particle.ts\"/>\n///// <reference path=\"level.ts\"/>\n\nimport { Vec2 } from './vec2';\nimport { Particle } from './particle';\nimport { MAX_HEIGHT } from './level';\nimport { Entity } from './entity';\nimport { Game } from './game';\n\nconst BULLET_RADIUS = 1.5;\nexport const BULLET_SPEED = 250;\n\nexport class Bullet extends Particle\n{\n\tfriendly = false;\n\n\tconstructor(p: Vec2, v: Vec2)\n\t{\n\t\tsuper(p, BULLET_RADIUS, v);\n\t}\n\n\tdraw()\n\t{\n\t\tnoStroke();\n\t\tfill(255, 255, 255);\n\t\tellipse(this.p.x, this.p.y, BULLET_RADIUS * 2, BULLET_RADIUS * 2);\n\t}\n\n\tmove(dt: number)\n\t{\n\t\treturn super.move(dt) &&\n\t\t\tthis.p.y > -MAX_HEIGHT &&\n\t\t\t!Game.level.collidePoint(this.p, this.r);\n\t}\n\n\tcollideEntities()\n\t{\n\t\tconst p = this.p;\n\t\tconst r = this.r;\n\t\tfor (let iEntity = Game.entities.length - 1; iEntity >= 0; iEntity--)\n\t\t{\n\t\t\tconst entity = Game.entities[iEntity];\n\t\t\tif (entity.solid && entity.collide(p, r))\n\t\t\t\treturn entity;\n\t\t}\n\t\treturn null;\n\t}\n}\n","import { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { TILE_SIZE } from './game';\n\nexport class Checkpoint extends Entity\n{\n\t\n\tconstructor(p: Vec2)\n\t{\n\t\tsuper(p, TILE_SIZE * 2);\n\t\tthis.solid = false;\n\t}\n\n\tdraw(_time: number)\n\t{\n\t}\n}","import { Vec2 } from './vec2';\n\n\nexport class Ellipse\n{\n\tprivate readonly cosa: number;\n\tprivate readonly sina: number;\n\n\tconstructor(public readonly p: Vec2, public readonly d: Vec2, public readonly a: number)\n\t{\n\t\tthis.cosa = cos(a);\n\t\tthis.sina = sin(a);\n\t}\n\n\tcollide(p: Vec2, r: number)\n\t{\n\t\tconst dx = p.x - this.p.x;\n\t\tconst dy = p.y - this.p.y;\n\t\tconst a = (this.cosa * dx + this.sina * dy) / (this.d.x + r);\n\t\tconst b = (this.sina * dx - this.cosa * dy) / (this.d.y + r);\n\n\t\treturn a * a + b * b <= 1 / 4;\n\t}\n}\n","///// <reference path=\"entity.ts\"/>\n///// <reference path=\"level.ts\"/>\n///// <reference path=\"bullet.ts\"/>\nimport { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Ellipse } from './ellipse';\nimport { Bullet, BULLET_SPEED } from './bullet';\nimport { Game } from './game';\n\nconst ENEMY_FIRE_MIN = 0.5;\nconst ENEMY_FIRE_MAX = 4;\n\nconst SLOPE = Math.atan2(1, 2) * 360 / (2 * Math.PI);\n\nexport class Enemy extends Entity\n{\n\tprivate readonly sx: number;\n\tprivate readonly sy: number;\n\tprivate readonly ba: number;\n\tprivate readonly bp: Vec2;\n\tprivate readonly ellipse: Ellipse;\n\tprivate readonly score: number;\n\tprivate timeFire: number;\n\n\tconstructor(p: Vec2, type: number)\n\t{\n\t\tconst sx = (type & 1) ? -1 : 1;\n\t\tconst sy = (type & 2) ? -1 : 1;\n\n\t\tp = p.plus(new Vec2(20, 20 + sy * 10));\n\n\t\tsuper(p, 15);\n\n\t\tthis.sx = sx;\n\t\tthis.sy = sy;\n\n\t\tthis.ba = atan2(-2 * this.sy, this.sx);\n\t\tconst bd = Vec2.fromAngle(this.ba);\n\n\t\tthis.bp = p.plus(bd.times(16));\n\t\tthis.score = 750;\n\n\t\tthis.timeFire = 0;\n\n\t\tthis.ellipse = new Ellipse(\n\t\t\tp,\n\t\t\tnew Vec2(40, 26),\n\t\t\tthis.sx * this.sy * SLOPE\n\t\t);\n\t}\n\tdraw()\n\t{\n\t\tfill(0, 0, 0);\n\t\tstroke(Game.level.ballColor);\n\n\t\tpush();\n\n\t\ttranslate(this.p.x, this.p.y);\n\t\tscale(this.sx, this.sy);\n\t\trotate(SLOPE);\n\t\ttranslate(-20, 0);\n\n\t\tbeginShape();\n\n\t\tvertex(0, 0);\n\t\tvertex(6, -10);\n\t\tvertex(34, -10);\n\t\tvertex(40, 0);\n\t\tvertex(38, 0);\n\n\t\tbezierVertex(33, -10, 7, -10, 2, 0);\n\n\t\tendShape(CLOSE);\n\n\t\tbeginShape();\n\t\tvertex(10, -10);\n\t\tbezierVertex(17, -15, 23, -15, 30, -10);\n\t\tendShape();\n\n\t\tpop();\n\t}\n\n\tmove(_dt: number)\n\t{\n\t\tif (!Game.level.reactor.isDamaged() &&\n\t\t\t(!this.timeFire || Game.time > this.timeFire))\n\t\t{\n\t\t\tthis.timeFire = Game.time + (random(ENEMY_FIRE_MIN, ENEMY_FIRE_MAX) + random(ENEMY_FIRE_MIN, ENEMY_FIRE_MAX)) / 2;\n\n\t\t\tconst av = (random(-95, 95) + random(-95, 95) + random(-95, 95)) / 3;\n\t\t\tconst bd = Vec2.fromAngle(this.ba + av);\n\t\t\tGame.particles.push(new Bullet(this.bp.clone(), bd.times(BULLET_SPEED)));\n\t\t}\n\t\treturn true;\n\t}\n\n\tcollide(p: Vec2, r: number)\n\t{\n\t\treturn this.ellipse.collide(p, r);\n\t}\n\n\tdamage(friendly: boolean)\n\t{\n\t\tif (friendly)\n\t\t{\n\t\t\tGame.score += this.score;\n\t\t\tthis.kill();\n\t\t}\n\t\treturn false;\n\t}\n}\n","///// <reference path=\"global.ts\"/>\n\nimport { Vec2 } from './vec2';\nimport { Game } from './game';\nimport { Explosion } from './explosion';\n\nexport const EXPLOSION_DENSITY = 8;\n\nexport abstract class Entity\t\n{\n\tsolid = true;\n\n\tconstructor(public p: Vec2, public readonly r: number)\n\t{\n\t}\n\n\tcollide(p: Vec2, r: number)\n\t{\n\t\tconst dx = this.p.x - p.x;\n\t\tconst dy = this.p.y - p.y;\n\t\tconst rr = this.r + r;\n\n\t\treturn dx * dx + dy * dy < rr * rr;\n\t}\n\n\tremove()\n\t{\n\t\tconst index = Game.entities.indexOf(this);\n\t\tif (index >= 0)\n\t\t{\n\t\t\tGame.entities.removeAt(index);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\t\n\tstatic createExplosion: (p: Vec2, r: number, c: number) => void;\n\n\texplode()\n\t{\n\t\tEntity.createExplosion(this.p, this.r, 5 + this.r * this.r / EXPLOSION_DENSITY);\n\t}\n\n\tkill()\n\t{\n\t\tif (this.remove())\n\t\t\tthis.explode();\n\t}\n\n\tabstract draw(time: number): void;\n\tmove(_dt: number) { return true; }\n\tdamage(_friendly: boolean) { return false; }\n\n}\n\n","///// <reference path=\"particle.ts\"/>\nimport { Vec2 } from './vec2';\nimport { Particle } from './particle';\nimport { Game } from './game';\n\n\nconst EXPLOSION_RADIUS = 1.5;\nexport class Explosion extends Particle\n{\n\tprivate readonly time: number;\n\n\tconstructor(p: Vec2, v: Vec2, public readonly color: p5.Color, public readonly life: number)\n\t{\n\t\tsuper(p, EXPLOSION_RADIUS, v);\n\t\tthis.time = Game.time;\n\t}\n\n\tdraw(time: number)\n\t{\n\t\tnoStroke();\n\t\tconst t = (time - this.time) / this.life;\n\t\tfill(this.color, 255 * (1 - t * t));\n\t\tellipse(this.p.x, this.p.y, this.r * 2, this.r * 2);\n\t}\n\n\tmove(dt: number)\n\t{\n\t\tthis.v.scale(0.95);\n\n\t\treturn super.move(dt) &&\n\t\t\t(Game.time - this.time < this.life) &&\n\t\t\t!Game.level.collidePoint(this.p, this.r);\n\t}\n\n\tstatic create(p: Vec2, r: number, c: number) {\n\t\tconst particles = Game.particles;\n\t\tfor (let i = 0; i < c; i++)\n\t\t{\n\t\t\tconst dir = Vec2.fromAngle(random() * 360);\n\t\t\tconst ex = new Explosion(\n\t\t\t\tp.plus(dir.times(r * random())),\n\t\t\t\tdir.times(random(5, 150)),\n\t\t\t\t[255, random(255), 0],\n\t\t\t\t0.25 + random() * 0.55\n\t\t\t);\n      particles.push(ex);\n    }\n  }\n}\n","///// <reference path=\"boxEntity.ts\"/>\nimport { Vec2 } from './vec2';\nimport { BoxEntity } from './boxEntity';\nimport { Box } from './box';\nimport { TILE_SIZE, Game } from './game';\n\nexport class Fuel extends BoxEntity\n{\n\tfuel = 3;\n\trefuelBox: Box;\n\tprivate readonly score = 150;\n\n\tconstructor(p: Vec2, private ballColor: p5.Color, private color: p5.Color)\n\t{\n\t\tsuper(p, new Box(\n\t\t\tp.x + 8,\n\t\t\tp.y + 18,\n\t\t\t24, 15\n\t\t));\n\n\t\tthis.refuelBox = new Box(\n\t\t\tp.x, p.y - 50,\n\t\t\t40, 80\n\t\t);\n\t}\n\n\tdraw()\n\t{\n\t\tpush();\n\n\t\ttranslate(this.p.x + TILE_SIZE / 2, this.p.y + TILE_SIZE);\n\n\t\tstroke(255, 255, 0);\n\n\t\tbeginShape();\n\t\tvertex(-12, -8);\n\t\tbezierVertex(-10, -6, 10, -6, 12, -8);\n\t\tbezierVertex(13, -9, 13, -19, 12, -20);\n\t\tbezierVertex(10, -22, -10, -22, -12, -20);\n\t\tbezierVertex(-13, -19, -13, -9, -12, -8);\n\t\tendShape();\n\n\t\tstroke(this.ballColor);\n\n\t\tline(-6, -6, -8, 0);\n\t\tline(6, -6, 8, 0);\n\n\t\tstroke(this.color);\n\n\t\t// F\n\t\tline(-10, -10, -10, -18);\n\t\tline(-10, -14, -7, -14);\n\t\tline(-10, -18, -6, -18);\n\n\t\t// U\n\t\tline(-4, -18, -4, -11);\n\t\tline(-4, -10, -0, -10);\n\t\tline(-0, -18, -0, -11);\n\n\t\t// E\n\t\tline(2, -18, 2, -10);\n\t\tline(2, -18, 5, -18);\n\t\tline(2, -14, 5, -14);\n\t\tline(2, -10, 5, -10);\n\n\t\t// L\n\t\tline(7, -18, 7, -10);\n\t\tline(7, -10, 10, -10);\n\n\t\tpop();\n\t}\n\n\tdamage(friendly: boolean)\n\t{\n\t\tif (friendly)\n\t\t{\n\t\t\tGame.score += this.score;\n\t\t\tthis.kill();\n\t\t}\n\t\treturn false;\n\t}\n}\n","import { Level } from \"./level\";\nimport { Ship } from \"./ship\";\nimport { Ball } from \"./ball\";\nimport { Particle } from \"./particle\";\nimport { Entity } from \"./entity\";\nimport { Vec2 } from \"./vec2\";\nimport { Explosion } from \"./explosion\";\n\nexport const TILE_SIZE = 40;\n\nexport class Game {\n  \n  static ship: Ship = null!;\n  static ball: Ball = null!;\n  static level: Level = null!;\n\n  static levelImg: p5.Image = null!;\n\n  static particles: Particle[] = [];\n  static entities: Entity[] = [];\n\n  static score: number = 0;\n  static lives: number = 3;\n  static time: number;\n\n  static game:Game = null!;\n}\n","import { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Reactor } from './reactor';\nimport { Enemy } from './enemy';\nimport { Base } from './base';\nimport { Checkpoint } from './checkpoint';\nimport { Fuel } from './fuel';\nimport { BALL_RADIUS } from './ball';\nimport { Game, TILE_SIZE } from './game';\n\nconst LAND_GAP = 40 / 8;\nconst LAND_THICKNESS = 2;\n\nexport const MAX_HEIGHT = TILE_SIZE * 15;\nexport var borderw: number;\nexport var borderh: number;\n\n\nconst SQRT5 = Math.sqrt(5);\n\n\nexport class Level\n{\n\treactor: Reactor = null!;\n\tballPos: Vec2 = null!;\n\tcheckpointPos: Vec2 = null!;\n\n\tconstructor(\n\t\tpublic readonly color: p5.Color,\n\t\tpublic readonly ballColor: p5.Color,\n\t\tpublic readonly startPos: Vec2,\n\t\tpublic readonly lines: string[])\n\t{\n\t}\n\n\tload(entities: Entity[])\n\t{\n\t\tconst lines = this.lines;\n\t\tconst lh = lines.length;\n\t\tlet lw = 0;\n\t\tfor (const rgchLine of lines)\n\t\t\tlw = Math.max(lw, rgchLine.length);\n\n\t\tconst bw = (lw + 2 * borderw) * TILE_SIZE;\n\t\tconst bh = (lh + borderh) * TILE_SIZE;\n\n\t\tconst gr = createGraphics(bw, bh, P2D);\n\t\t//const img = createImage(bw, bh);//, RGB);\n\t\t//img.sourceImg = gr.externals.canvas;\n\t\t//img.remote = true;\n\n\t\tthis.checkpointPos = new Vec2((borderw + 0.5) * TILE_SIZE, 0).plusScale(Game.level.startPos, TILE_SIZE);\n\n\t\t//gr.beginDraw();\n\t\tgr.background(0);\n\t\tgr.strokeWeight(LAND_THICKNESS);\n\t\tgr.stroke(this.color);\n\n\t\tfor (let iLine = 0; iLine < lines.length; iLine++)\n\t\t{\n\t\t\tconst rgchLine = lines[iLine];\n\n\t\t\tfor (let ich = 0; ich < rgchLine.length; ich++)\n\t\t\t{\n\t\t\t\tconst p = new Vec2(\n\t\t\t\t\t(borderw + ich) * TILE_SIZE,\n\t\t\t\t\tiLine * TILE_SIZE\n\t\t\t\t);\n\n\t\t\t\tlet entity: Entity | null = null;\n\n\t\t\t\tconst ch = rgchLine[ich];\n\t\t\t\tswitch (ch)\n\t\t\t\t{\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tentity = this.reactor = new Reactor(p, this.ballColor, this.color);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\tentity = new Fuel(p, this.ballColor, this.color);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tentity = new Enemy(p, 0);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'd':\n\t\t\t\t\t\tentity = new Enemy(p, 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\tentity = new Enemy(p, 2);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'f':\n\t\t\t\t\t\tentity = new Enemy(p, 3);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'g':\n\t\t\t\t\t\tentity = new Base(p);\n\t\t\t\t\t\tthis.ballPos = new Vec2(\n\t\t\t\t\t\t\t(borderw + ich + 0.5) * TILE_SIZE,\n\t\t\t\t\t\t\tiLine * TILE_SIZE + TILE_SIZE - 18 - BALL_RADIUS\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'k':\n\t\t\t\t\t\tentity = new Checkpoint(p);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (entity)\n\t\t\t\t\tentities.push(entity);\n\t\t\t}\n\n\t\t\tfor (let y = 0; y < TILE_SIZE; y += LAND_GAP)\n\t\t\t{\n\t\t\t\tlet lx = -10000;\n\t\t\t\tlet ly = iLine * TILE_SIZE + y;\n\n\t\t\t\tlet land = rgchLine[0] === '1';\n\t\t\t\tfor (let ich = 0; ich < rgchLine.length; ich++)\n\t\t\t\t{\n\t\t\t\t\tlet end;\n\t\t\t\t\tlet start;\n\n\t\t\t\t\tconst ch = rgchLine[ich];\n\t\t\t\t\tswitch (ch)\n\t\t\t\t\t{\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\tcase '0':\n\t\t\t\t\t\t\tend = 0;\n\t\t\t\t\t\t\tstart = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '1':\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tend = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '2':\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tend = 2 * y;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '3':\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tend = 2 * y - TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '4':\n\t\t\t\t\t\tcase 'd':\n\t\t\t\t\t\t\tstart = TILE_SIZE * 2 - 2 * y;\n\t\t\t\t\t\t\tend = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '5':\n\t\t\t\t\t\t\tstart = TILE_SIZE - 2 * y;\n\t\t\t\t\t\t\tend = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '6':\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tend = TILE_SIZE * 2 - 2 * y;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '7':\n\t\t\t\t\t\tcase 'e':\n\t\t\t\t\t\t\tstart = 0;\n\t\t\t\t\t\t\tend = TILE_SIZE - 2 * y;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '8':\n\t\t\t\t\t\tcase 'f':\n\t\t\t\t\t\t\tstart = 2 * y;\n\t\t\t\t\t\t\tend = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase '9':\n\t\t\t\t\t\t\tstart = 2 * y - TILE_SIZE;\n\t\t\t\t\t\t\tend = TILE_SIZE;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst x = (borderw + ich) * TILE_SIZE;\n\n\t\t\t\t\tif (start < 0) { start = 0; }\n\t\t\t\t\tif (end > TILE_SIZE) { end = TILE_SIZE; }\n\n\t\t\t\t\tif (land)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (start > 0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgr.line(lx, ly, x - 1, ly);\n\n\t\t\t\t\t\t\tif (start < TILE_SIZE)\n\t\t\t\t\t\t\t\tlx = x + Math.min(TILE_SIZE, start);\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tland = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (end < TILE_SIZE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgr.line(lx, ly, x + Math.max(0, end) - 1, ly);\n\t\t\t\t\t\t\tland = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (end > start)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (start >= 0 && start < TILE_SIZE)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tland = true;\n\t\t\t\t\t\t\tlx = x + Math.min(TILE_SIZE, start);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (land)\n\t\t\t\t\tgr.line(lx, ly, 10000, ly);\n\t\t\t}\n\n\t\t\tfor (let y = 0; y < TILE_SIZE * borderh; y += LAND_GAP)\n\t\t\t{\n\t\t\t\tconst ly = lh * TILE_SIZE + y;\n\t\t\t\tgr.line(-1000, ly, 10000, ly);\n\t\t\t}\n\t\t}\n\n\t\t//gr.endDraw();\n\n\t\treturn {\n\t\t\tentities,\n\t\t\timage: <p5.Image><any>gr\n\t\t}\n\t}\n\n\tcollidePoint(p: Vec2, r: number, offset?: Vec2)\n\t{\n\t\tconst lines = this.lines;\n\n\t\tlet mx = Math.floor(p.x / TILE_SIZE);\n\t\tlet my = Math.floor(p.y / TILE_SIZE);\n\n\t\tif (offset)\n\t\t{\n\t\t\tmx += offset.x;\n\t\t\tmy += offset.y;\n\t\t}\n\n\t\tconst x = p.x - mx * TILE_SIZE;\n\t\tconst y = p.y - my * TILE_SIZE;\n\n\t\tmx -= borderw;\n\n\t\tif (my < 0) { return false; }\n\t\tif (my >= lines.length) { return true; }\n\n\t\tconst line = lines[my];\n\t\tif (mx < 0) { mx = 0; }\n\t\telse if (mx >= line.length) { mx = line.length - 1; }\n\n\t\tswitch (line[mx])\n\t\t{\n\t\t\tdefault:\n\t\t\tcase '0':\n\t\t\t\treturn false;\n\t\t\tcase '1':\n\t\t\t\treturn true;\n\t\t\tcase '2':\n\t\t\t\treturn (y + r * SQRT5 / 2 > x / 2);\n\t\t\tcase '3':\n\t\t\tcase 'c':\n\t\t\t\treturn (y + r * SQRT5 / 2 > TILE_SIZE / 2 + x / 2);\n\t\t\tcase '4':\n\t\t\tcase 'd':\n\t\t\t\treturn (y + r * SQRT5 / 2 > TILE_SIZE - x / 2);\n\t\t\tcase '5':\n\t\t\t\treturn (y + r * SQRT5 / 2 > TILE_SIZE / 2 - x / 2);\n\t\t\tcase '6':\n\t\t\t\treturn (y - r * SQRT5 / 2 < TILE_SIZE - x / 2);\n\t\t\tcase '7':\n\t\t\tcase 'e':\n\t\t\t\treturn (y - r * SQRT5 / 2 < TILE_SIZE / 2 - x / 2);\n\t\t\tcase '8':\n\t\t\tcase 'f':\n\t\t\t\treturn (y - r * SQRT5 / 2 < x / 2);\n\t\t\tcase '9':\n\t\t\t\treturn (y - r * SQRT5 / 2 < TILE_SIZE / 2 + x / 2);\n\t\t}\n\t}\n\n\tcollideEntity(entity: Entity)\n\t{\n\t\tconst p = entity.p;\n\t\tconst r = entity.r;\n\t\tconst px = (p.x + TILE_SIZE * 1000) % TILE_SIZE;\n\t\tconst py = (p.y + TILE_SIZE * 1000) % TILE_SIZE;\n\n\t\tconst offset = new Vec2(0, 0);\n\n\t\tfor (\n\t\t\tlet mx = Math.floor((px - r) / TILE_SIZE);\n\t\t\tmx <= Math.floor((px + r) / TILE_SIZE);\n\t\t\tmx += 1)\n\t\t{\n\t\t\tfor (\n\t\t\t\tlet my = Math.floor((py - r) / TILE_SIZE);\n\t\t\t\tmy <= Math.floor((py + r) / TILE_SIZE);\n\t\t\t\tmy += 1)\n\t\t\t{\n\t\t\t\toffset.x = mx;\n\t\t\t\toffset.y = my;\n\n\t\t\t\tif (this.collidePoint(p, r, offset))\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstatic initializeLevels(width: number, height: number)\n\t{\n\t\tborderw = Math.ceil(width / TILE_SIZE / 2);\n\t\tborderh = Math.ceil(height / TILE_SIZE / 2);\n\n\t\tLevel.levels = [\n\t\t\tnew Level(\n\t\t\t\tcolor(255, 0, 0),\n\t\t\t\tcolor(0, 255, 0),\n\t\t\t\tnew Vec2(5, -2),\n\t\t\t\t[\n\t\t\t\t\t\"00000000000k000a0\",\n\t\t\t\t\t\"12300b00000000111\",\n\t\t\t\t\t\"11111112c000g0111\",\n\t\t\t\t],\n\t\t\t),\n\t\t\tnew Level(\n\t\t\t\tcolor(0, 255, 0),\n\t\t\t\tcolor(255, 0, 0),\n\t\t\t\tnew Vec2(2, -2),\n\t\t\t\t[\n\t\t\t\t\t\"0a000000000k0000000451123\",\n\t\t\t\t\t\"1112300000000000045111111\",\n\t\t\t\t\t\"1111123000000004511111111\",\n\t\t\t\t\t\"1111111230000451111111111\",\n\t\t\t\t\t\"1111111112000111111111111\",\n\t\t\t\t\t\"1111111111000111111111111\",\n\t\t\t\t\t\"1111111111000111111111111\",\n\t\t\t\t\t\"11111111110k0111111111111\",\n\t\t\t\t\t\"1111111111000911111111111\",\n\t\t\t\t\t\"11111111670000f9111111111\",\n\t\t\t\t\t\"1111116e00000000111111111\",\n\t\t\t\t\t\"1111110000000000111111111\",\n\t\t\t\t\t\"1111110000000045111111111\",\n\t\t\t\t\t\"11111123g00b4511111111111\",\n\t\t\t\t]\n\t\t\t),\n\t\t\tnew Level(\n\t\t\t\tcolor(0, 255, 255),\n\t\t\t\tcolor(0, 255, 0),\n\t\t\t\tnew Vec2(10, -2),\n\t\t\t\t[\n\t\t\t\t\t\"10000000000b00000000000\",\n\t\t\t\t\t\"11111111111111100000001\",\n\t\t\t\t\t\"1111111111111110000a001\",\n\t\t\t\t\t\"11111111111111100011111\",\n\t\t\t\t\t\"11111111111111100011111\",\n\t\t\t\t\t\"11111111111111100011111\",\n\t\t\t\t\t\"11111111111111100011111\",\n\t\t\t\t\t\"11111111111116e0k000001\",\n\t\t\t\t\t\"11111111111110000000001\",\n\t\t\t\t\t\"11111111111110000bbb0d1\",\n\t\t\t\t\t\"11111111111110000111111\",\n\t\t\t\t\t\"11111111111110000111111\",\n\t\t\t\t\t\"11111111111110000111111\",\n\t\t\t\t\t\"1111116e000000000111111\",\n\t\t\t\t\t\"11111100000000000111111\",\n\t\t\t\t\t\"1111110000000b000111111\",\n\t\t\t\t\t\"11111100000011111111111\",\n\t\t\t\t\t\"16e00000000011111111111\",\n\t\t\t\t\t\"100000k0000011111111111\",\n\t\t\t\t\t\"10000000b00011111111111\",\n\t\t\t\t\t\"100000d5111111111111111\",\n\t\t\t\t\t\"10000011111111111111111\",\n\t\t\t\t\t\"10000011111111111111111\",\n\t\t\t\t\t\"10000011111111111111111\",\n\t\t\t\t\t\"10000011111111111111111\",\n\t\t\t\t\t\"1230g011111111111111111\",\n\t\t\t\t],\n\t\t\t),\n\t\t\tnew Level(\n\t\t\t\tcolor(0, 255, 0),\n\t\t\t\tcolor(255, 0, 255),\n\t\t\t\tnew Vec2(6, -2),\n\t\t\t\t[\n\t\t\t\t\t\"1112300000001111111111\",\n\t\t\t\t\t\"1111123000001111111111\",\n\t\t\t\t\t\"1111111111001111111111\",\n\t\t\t\t\t\"1111111111001111111111\",\n\t\t\t\t\t\"1111111111001111111111\",\n\t\t\t\t\t\"1111111111001111111111\",\n\t\t\t\t\t\"1111111167001111111111\",\n\t\t\t\t\t\"1111116e00001111111111\",\n\t\t\t\t\t\"1111670000001111111111\",\n\t\t\t\t\t\"11670000k0001111111111\",\n\t\t\t\t\t\"1100000000001111111111\",\n\t\t\t\t\t\"1100000000001111111111\",\n\t\t\t\t\t\"1112c00111111111111111\",\n\t\t\t\t\t\"1111600111111111111111\",\n\t\t\t\t\t\"116e000891111111111111\",\n\t\t\t\t\t\"1700000008911111111111\",\n\t\t\t\t\t\"10000000000f9111111111\",\n\t\t\t\t\t\"1000000000000000000001\",\n\t\t\t\t\t\"100a000000000000k00001\",\n\t\t\t\t\t\"1111111112c000000000i1\",\n\t\t\t\t\t\"11111111111230000b0001\",\n\t\t\t\t\t\"1111111111111111111001\",\n\t\t\t\t\t\"1111111111111111111j01\",\n\t\t\t\t\t\"1111111111111111111001\",\n\t\t\t\t\t\"11111111111111111670i1\",\n\t\t\t\t\t\"1111111111111116e00001\",\n\t\t\t\t\t\"1111111111111670000001\",\n\t\t\t\t\t\"1111111111111000k00001\",\n\t\t\t\t\t\"1111111111111000000d51\",\n\t\t\t\t\t\"1111111111111230045111\",\n\t\t\t\t\t\"1111111111111110011111\",\n\t\t\t\t\t\"111111111111111g011111\",\n\t\t\t\t]\n\t\t\t),\n\t\t\tnew Level(\n\t\t\t\tcolor(255, 0, 0),\n\t\t\t\tcolor(255, 0, 255),\n\t\t\t\tnew Vec2(5, -2),\n\t\t\t\t[\n\t\t\t\t\t\"0000000k0000000000000\",\n\t\t\t\t\t\"111230000001111111111\",\n\t\t\t\t\t\"111112000001111111111\",\n\t\t\t\t\t\"1111110b0001111111111\",\n\t\t\t\t\t\"111111111001111111111\",\n\t\t\t\t\t\"111111111001111111111\",\n\t\t\t\t\t\"111111111001111111111\",\n\t\t\t\t\t\"111111111001111111111\",\n\t\t\t\t\t\"111111111001111111111\",\n\t\t\t\t\t\"111116e000k00f9111111\",\n\t\t\t\t\t\"111110000000000111111\",\n\t\t\t\t\t\"1111100000a0bb0111111\",\n\t\t\t\t\t\"111111100111111111111\",\n\t\t\t\t\t\"111111100111111111111\",\n\t\t\t\t\t\"111111100111111111111\",\n\t\t\t\t\t\"111111600011111111111\",\n\t\t\t\t\t\"11116700k011111111111\",\n\t\t\t\t\t\"100000000011111111111\",\n\t\t\t\t\t\"100000000011111111111\",\n\t\t\t\t\t\"10000b000d11111111111\",\n\t\t\t\t\t\"100011111111111111111\",\n\t\t\t\t\t\"100011111111111111111\",\n\t\t\t\t\t\"100089111111111111111\",\n\t\t\t\t\t\"100000891111111111111\",\n\t\t\t\t\t\"123000008911111111111\",\n\t\t\t\t\t\"111230000011111111111\",\n\t\t\t\t\t\"1111100k0011111111111\",\n\t\t\t\t\t\"111100000011111111111\",\n\t\t\t\t\t\"111100000000f91111111\",\n\t\t\t\t\t\"11112c0bb000001111111\",\n\t\t\t\t\t\"111111111000001111111\",\n\t\t\t\t\t\"111111111000000001111\",\n\t\t\t\t\t\"1111111110000000i1111\",\n\t\t\t\t\t\"1111111112c0bb0001111\",\n\t\t\t\t\t\"111111111111111001111\",\n\t\t\t\t\t\"111111111111111j01111\",\n\t\t\t\t\t\"111111111111111008911\",\n\t\t\t\t\t\"1111111111111110000f1\",\n\t\t\t\t\t\"11111111111111100k001\",\n\t\t\t\t\t\"111111111111111h00001\",\n\t\t\t\t\t\"111111111111111000041\",\n\t\t\t\t\t\"1111111111111113g4511\",\n\t\t\t\t\t\"111111111111111111111\",\n\t\t\t\t\t\"111111111111111111111\",\n\t\t\t\t\t\"111111111111111111111\",\n\t\t\t\t\t\"111111111111111111111\",\n\t\t\t\t]\n\t\t\t),\n\t\t\tnew Level(\n\t\t\t\tcolor(255, 255, 0),\n\t\t\t\tcolor(0, 255, 0),\n\t\t\t\tnew Vec2(5, -2),\n\t\t\t\t[\n\t\t\t\t\t\"0000000000000000000000000001111111111123000\",\n\t\t\t\t\t\"0451230045123000000045111001111111111111230\",\n\t\t\t\t\t\"1111110011111230004511111001111000000891111\",\n\t\t\t\t\t\"1111110011111111111111111009116000000001111\",\n\t\t\t\t\t\"1111110000000891111111111000000000000001111\",\n\t\t\t\t\t\"1111110000000001111111111000000000110001111\",\n\t\t\t\t\t\"1111112300000001111111111300000000110001111\",\n\t\t\t\t\t\"1111111111111001111111111111111111110001111\",\n\t\t\t\t\t\"1111111111111008111111111111111111670001111\",\n\t\t\t\t\t\"1111111111111000111111111111111167000001111\",\n\t\t\t\t\t\"1111111111111005111111111111111100000041111\",\n\t\t\t\t\t\"1111111111117001111111111111111100000011111\",\n\t\t\t\t\t\"1111111111110001111111111111111100450011111\",\n\t\t\t\t\t\"1111111111112008911111111111116700110011111\",\n\t\t\t\t\t\"1111111111111000089111111111670000110011111\",\n\t\t\t\t\t\"1111111111111000000891111167000000110011111\",\n\t\t\t\t\t\"1111111111111230000008916700000045110011111\",\n\t\t\t\t\t\"1111111111111112300000000000004511110011111\",\n\t\t\t\t\t\"1111111111111111123000000000451111700008111\",\n\t\t\t\t\t\"1111111111111111111234512345111111000000111\",\n\t\t\t\t\t\"1111111111111111111111111111111111000000111\",\n\t\t\t\t\t\"1111111111111111111111111111111111000000111\",\n\t\t\t\t]\n\t\t\t)\n\t\t];\n\t}\n\n\tstatic levels: Level[];\n}\n","import { Ball } from \"./ball\";\nimport { Ship } from \"./ship\";\nimport { Bullet } from \"./bullet\";\nimport { Star } from \"./star\";\nimport { Vec2 } from \"./vec2\";\nimport { Level, MAX_HEIGHT, borderw, borderh } from \"./level\";\nimport { Fuel } from \"./fuel\";\nimport { Checkpoint } from \"./checkpoint\";\nimport { Entity } from \"./entity\";\nimport { Game, TILE_SIZE } from './game';\nimport { Explosion } from \"./explosion\";\n///// <reference path=\"level.ts\"/>\n\nlet RENDER_SCALE = 0.5;\nlet bonus: number;\nlet font: p5.Font;\nlet fontHeight: number;\n\nconst KEY_LEFT = 'Z'.charCodeAt(0);\nconst KEY_RIGHT = 'X'.charCodeAt(0);\nconst KEY_FIRE = 13;//ENTER;\nconst KEY_THRUST = 16;//SHIFT;\nconst KEY_SHIELD = ' '.charCodeAt(0);\n\nconst instrs = [\n\t\"Z, X : ROTATE\",\n\t\"ENTER : FIRE\",\n\t\"SPACE : SHIELD / TRACTOR\",\n\t\"SHIFT : THRUST\",\n];\n\nenum GameState\n{\n\tSTART,\n\tPLAY,\n\tDEATH,\n\tOVER,\n\tORBIT,\n\tDESTROYED,\n}\n\nlet gameState = GameState.START;\nfunction setGame(state: GameState)\n{\n\tif (gameState === state)\n\t\treturn;\n\n\tgameState = state;\n\tswitch (gameState)\n\t{\n\t\tcase GameState.DEATH:\n\t\tcase GameState.ORBIT:\n\t\tcase GameState.DESTROYED:\n\t\tcase GameState.OVER:\n\t\t\tif (Game.ship.fuel < 0)\n\t\t\t\tGame.ship.fuel = 0;\n\t\t\tif (Game.lives < 0)\n\t\t\t\tGame.lives = 0;\n\t\t\tbreak;\n\t}\n}\n\nconst START_LEVEL = 0;\nconst THRUST_FUEL_RATE = 1 / 9;\nconst REFUEL_RATE = 3;\nconst TURN_SPEED = 275;\n\nlet timePrev: number;\n\nlet waitTime: number;\n\n//let paused: boolean = false;\n\nlet wasAttaching: boolean;\n\n\nexport let currentLevel = START_LEVEL;\n\n\nconst keys: { [key: number]: boolean } = {};\nwindow['keyPressed'] = function () { keys[+keyCode] = true; }\nwindow['keyReleased'] = function () { keys[+keyCode] = false; }\n\nfunction newGame()\n{\n\tGame.ball = new Ball(color(255));\n\tGame.ship = new Ship();\n\n\tGame.score = 0;\n\tGame.lives = 3;\n\n\tcurrentLevel = START_LEVEL;\n\tstartLevel();\n}\n\nfunction startLevel()\n{\n\tGame.entities.length = 0;\n\tGame.entities.push(Game.ship, Game.ball);\n\n\tGame.level = Level.levels[currentLevel];\n\tconst levelInfo = Game.level.load(Game.entities);\n\tGame.levelImg = levelInfo.image;\n\n\tGame.ball.ballColor = Game.level.ballColor;\n\n\tresetLevel();\n}\n\nfunction resetLevel()\n{\n\ttimePrev = millis() / 1000.0;\n\n\tGame.entities.remove(Game.ship);\n\tGame.entities.remove(Game.ball);\n\tGame.entities.remove(Game.level.reactor);\n\tGame.entities.push(Game.ship, Game.ball, Game.level.reactor);\n\n\tlet level = Level.levels[currentLevel];\n\n\tGame.ball.reset(level.ballPos);\n\tGame.ship.reset();\n\tGame.ship.move(0);\n\tlevel.reactor.reset();\n\n\twasAttaching = false;\n\n\tbonus = 0;\n\tsetGame(GameState.START);\n}\n\nlet starSum = 0;\n\nwindow['draw'] = function ()\n{\n\tconst ship = Game.ship;\n\tconst level = Game.level;\n\tconst time = Game.time = millis() / 1000.0;\n\tconst dt = Game.time - timePrev;\n\ttimePrev = Game.time;\n\n\n\tif (ship.dead)\n\t{\n\t\tship.dead = false;\n\n\t\tship.kill();\n\t\twaitTime = Game.time + 1.5;\n\t\tsetGame(GameState.DEATH);\n\t}\n\n\tlet attaching = false;\n\n\tswitch (gameState)\n\t{\n\t\tcase GameState.PLAY:\n\t\tcase GameState.START:\n\n\t\t\tif (keys[KEY_LEFT])\n\t\t\t\tship.rotate(-TURN_SPEED * dt);\n\t\t\telse if (keys[KEY_RIGHT])\n\t\t\t\tship.rotate(TURN_SPEED * dt);\n\n\t\t\tship.shield = false;\n\t\t\tship.refuel = false;\n\n\t\t\tif (!!keys[KEY_SHIELD])\n\t\t\t\tattaching = ship.activateShield(dt, wasAttaching);\n\n\t\t\tship.fire(keys[KEY_FIRE]);\n\n\t\t\tfor (let iEntity = Game.entities.length - 1; iEntity >= 0; iEntity--)\n\t\t\t{\n\t\t\t\tif (iEntity >= Game.entities.length)\n\t\t\t\t\tcontinue;\t// handle when multiple entries are removed (eg ship & ball)\n\n\t\t\t\tconst entity = Game.entities[iEntity];\n\t\t\t\tif (entity !== ship || gameState === GameState.PLAY)\n\t\t\t\t{\n\t\t\t\t\tif (entity.move(dt) === false)\n\t\t\t\t\t{\n\t\t\t\t\t\tGame.entities.removeAt(iEntity);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (gameState === GameState.PLAY)\n\t\t\t\t{\n\t\t\t\t\tif (entity.solid)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entity !== ship && entity.collide(ship.p, ship.r) ||\n\t\t\t\t\t\t\tentity !== Game.ball && entity.collide(Game.ball.p, Game.ball.r))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tship.die();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (ship.shield &&\n\t\t\t\t\t\t\tentity instanceof Fuel &&\n\t\t\t\t\t\t\tentity.refuelBox.collide(ship.p, 0))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tconst df = Math.min(entity.fuel, dt * REFUEL_RATE);\n\t\t\t\t\t\t\tentity.fuel -= df;\n\t\t\t\t\t\t\tship.fuel += df;\n\t\t\t\t\t\t\tship.refuel = true;\n\t\t\t\t\t\t\tif (entity.fuel <= 0)\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tGame.entities.removeAt(iEntity);\n\t\t\t\t\t\t\t\tGame.score += 300;\n\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse if (entity instanceof Checkpoint)\n\t\t\t\t\t{\n\t\t\t\t\t\tif (entity.collide(ship.p, ship.r))\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tGame.entities.removeAt(iEntity);\n\t\t\t\t\t\t\tlevel.checkpointPos = entity.p;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (gameState === GameState.PLAY)\n\t\t\t{\n\t\t\t\tship.thrust = keys[KEY_THRUST] && ship.p.y > -MAX_HEIGHT && ship.fuel > 0;\n\t\t\t\tif (ship.thrust)\n\t\t\t\t\tship.fuel = Math.max(0, ship.fuel - dt * THRUST_FUEL_RATE);\n\n\t\t\t\tif (level.collideEntity(ship) ||\n\t\t\t\t\tlevel.collideEntity(Game.ball))\n\t\t\t\t{\n\t\t\t\t\tship.die();\n\t\t\t\t}\n\n\t\t\t\tif (ship.p.y < -MAX_HEIGHT)\n\t\t\t\t{\n\t\t\t\t\tif (ship.rod)\n\t\t\t\t\t{\n\t\t\t\t\t\tbonus += 2000;\n\n\t\t\t\t\t\tif (level.reactor.life <= 0)\n\t\t\t\t\t\t\tbonus += 2000;\n\t\t\t\t\t}\n\n\t\t\t\t\twaitTime = time + 3;\n\t\t\t\t\tsetGame(GameState.ORBIT);\n\t\t\t\t}\n\n\t\t\t\tif (level.reactor.timeExplode && time > level.reactor.timeExplode)\n\t\t\t\t{\n\t\t\t\t\tfor (let iEntity = Game.entities.length - 1; iEntity >= 0; iEntity--)\n\t\t\t\t\t\tif (iEntity <= Game.entities.length)\n\t\t\t\t\t\t\tGame.entities[iEntity].kill();\n\n\t\t\t\t\twaitTime = time + 3;\n\t\t\t\t\tsetGame(GameState.DESTROYED);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if (gameState === GameState.START)\n\t\t\t{\n\t\t\t\tif (keys[KEY_THRUST])\n\t\t\t\t\tsetGame(GameState.PLAY);\n\t\t\t}\n\n\t\t\twasAttaching = attaching;\n\n\t\t\tbreak;\n\t}\n\n\tif (gameState === GameState.ORBIT)\n\t{\n\t\tbackground(0, 0, 0);\n\t}\n\telse\n\t{\n\t\t// move particles\n\t\tfor (let iParticle = Game.particles.length - 1; iParticle >= 0; iParticle--)\n\t\t{\n\t\t\tconst particle = Game.particles[iParticle];\n\t\t\tif (particle.move(dt) === false)\n\t\t\t{\n\t\t\t\tGame.particles.removeAt(iParticle);\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tconst entity = particle.collideEntities();\n\t\t\tif (entity)\n\t\t\t{\n\t\t\t\tGame.particles.removeAt(iParticle);\n\n\t\t\t\tif (gameState === GameState.PLAY &&\n\t\t\t\t\tparticle instanceof Bullet &&\n\t\t\t\t\tentity.damage(particle.friendly))\n\t\t\t\t{\n\t\t\t\t\tExplosion.create(particle.p, 0, 4);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tconst px = ship.p.x;\n\t\tconst py = ship.p.y;\n\n\t\tconst sw = width / RENDER_SCALE;\n\t\tconst sh = height / RENDER_SCALE;\n\n\t\tnoStroke();\n\n\t\t// draw sky\n\n\t\tvar yl = height / 2 - py * RENDER_SCALE + 1;\n\t\tif (yl > 0)\n\t\t{\n\t\t\tfill(0, 0, 0);\n\t\t\trect(0, 0, width, yl);\n\n\t\t\t// add stars\n\t\t\tstarSum += random(width * yl) / 5000000;\n\t\t\twhile (starSum > 1)\n\t\t\t{\n\t\t\t\tstarSum -= 1;\n\n\t\t\t\tconst syMin = py - sh / 2;\n\t\t\t\tconst syMax = Math.min(0, py + sh / 2);\n\n\t\t\t\tconst sy = random(syMin, syMax);\n\t\t\t\tconst sx = px + random(-1, 1) * sw / 2;\n\t\t\t\tconst star = new Star(new Vec2(sx, sy));\n\t\t\t\tGame.particles.push(star);\n\t\t\t}\n\t\t}\n\n\t\tpush();\n\t\ttranslate(width / 2, height / 2);\n\t\tscale(RENDER_SCALE, RENDER_SCALE);\n\t\ttranslate(- px, - py);\n\n\t\t// draw level\n\t\timage(Game.levelImg, 0, 0);\n\t\tif (px < width / 2)\n\t\t\timage(Game.levelImg, -Game.levelImg.width, 0);\n\t\telse if (px > Game.levelImg.width - width / 2)\n\t\t\timage(Game.levelImg, Game.levelImg.width, 0);\n\n\t\t// draw particles\n\t\tstrokeWeight(0.25);\n\t\tfor (const particle of Game.particles)\n\t\t\tparticle.draw(time);\n\n\t\t// draw entities\n\t\tstroke(255, 255, 255);\n\t\tstrokeWeight(1.3);\n\t\tfill(0, 0, 0);\n\t\tfor (const entity of Game.entities)\n\t\t{\n\t\t\tif (Math.abs(entity.p.x - px) <= sw / 2 + TILE_SIZE &&\n\t\t\t\tMath.abs(entity.p.y - py) <= sh / 2 + TILE_SIZE)\n\t\t\t{\n\t\t\t\tentity.draw(time);\n\t\t\t}\n\t\t}\n\n\t\t// draw rod\n\t\tstroke(level.color);\n\t\tif (ship.rod)\n\t\t\tship.rod.draw();\n\t\telse if (attaching)\n\t\t\tline(ship.p.x, ship.p.y, Game.ball.p.x, Game.ball.p.y);\n\n\t\tpop();\n\t}\n\n\t// draw header\n\n\tfill(0, 0, 0, 64);\n\trect(0, 0, width, fontHeight * 2 + fontHeight);\n\n\tfill(255, 255, 255);\n\ttextAlign(LEFT, TOP);\n\ttext(\"FUEL\", fontHeight / 2, fontHeight / 2);\n\ttext((ship.fuel * 100).toFixed(), fontHeight / 2, fontHeight * 3 / 2);\n\n\ttextAlign(RIGHT, TOP);\n\ttext(\"SCORE\", width - fontHeight / 2, fontHeight / 2);\n\ttext(\"\" + Game.score, width - fontHeight / 2, fontHeight * 3 / 2);\n\n\ttextAlign(CENTER, TOP);\n\ttext(\"LIVES\", width / 2, fontHeight / 2);\n\ttext(\"\" + Game.lives, width / 2, fontHeight * 3 / 2);\n\n\tswitch (gameState)\n\t{\n\t\tcase GameState.PLAY:\n\n\t\t\tconst reactor = level.reactor;\n\t\t\tif (reactor && reactor.timeExplode > time)\n\t\t\t{\n\t\t\t\tstroke(255, 255, 255);\n\t\t\t\tfill(255, 255, 255);\n\t\t\t\ttextAlign(CENTER, TOP);\n\t\t\t\ttext(floor(reactor.timeExplode - time).toString(), width / 2, height / 4);\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase GameState.START:\n\t\t\tfill(255, 255, 255);\n\t\t\tnoStroke();\n\t\t\ttextAlign(CENTER, TOP);\n\t\t\ttext(\"THRUST TO START\", 0, height * 2 / 3 + fontHeight * 2, width, height);\n\n\t\t\tif (Game.score === 0)\n\t\t\t{\n\t\t\t\ttext(\"RESCUE THE POD\", 0, height * 2 / 3 - fontHeight, width, height);\n\t\t\t\ttext(\"DESTROY THE REACTOR\", 0, height * 2 / 3 + 0, width, height);\n\t\t\t\ttext(\"ESCAPE TO ORBIT\", 0, height * 2 / 3 + fontHeight, width, height);\n\n\t\t\t\ttextAlign(LEFT, TOP);\n\t\t\t\tfor (let i = 0; i < instrs.length; i++)\n\t\t\t\t{\n\t\t\t\t\tconst it = instrs[i];\n\t\t\t\t\tconst mt = textWidth(it.substr(0, it.indexOf(':') + 1));\n\t\t\t\t\ttext(it, width / 2 - mt, height / 3 + (i - instrs.length * 2 / 3) * fontHeight, width, height);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase GameState.DEATH:\n\t\t\tif (time > waitTime && !keys[KEY_THRUST])\n\t\t\t{\n\t\t\t\tif (--Game.lives >= 0 && ship.fuel > 0)\n\t\t\t\t\tresetLevel();\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\twaitTime = time + 2;\n\t\t\t\t\tsetGame(GameState.OVER);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase GameState.OVER:\n\t\t\tfill(255, 255, 255);\n\t\t\ttextAlign(CENTER, TOP);\n\t\t\ttext(\"GAME OVER\", width / 2, height / 3);\n\n\t\t\tif (time > waitTime)\n\t\t\t{\n\t\t\t\ttext(\"THRUST TO START\", 0, height * 2 / 3 + fontHeight * 2, width, height);\n\t\t\t\tif (keys[KEY_THRUST])\n\t\t\t\t{\n\t\t\t\t\tnewGame();\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase GameState.ORBIT:\n\n\t\t\tnoStroke();\n\t\t\ttextAlign(CENTER, TOP);\n\n\t\t\tlet nextLevel = ship.rod || level.reactor.life <= 0;\n\t\t\tif (!nextLevel)\n\t\t\t{\n\t\t\t\tfill(level.ballColor);\n\t\t\t\ttext(\"MISSION INCOMPLETE\", 0, height / 3, width, height);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tif (level.reactor.life <= 0)\n\t\t\t\t{\n\t\t\t\t\tfill(level.color);\n\t\t\t\t\ttext(\"PLANET DESTROYED\", 0, height / 3 + 0, width, height);\n\t\t\t\t}\n\n\t\t\t\tfill(level.ballColor);\n\t\t\t\ttextAlign(RIGHT, TOP);\n\t\t\t\ttext(\"MISSION\", width / 2 - fontHeight / 2, height / 3 + fontHeight * 2, 0, height);\n\t\t\t\ttextAlign(LEFT, TOP);\n\t\t\t\ttext(ship.rod ? \"COMPLETE\" : \"FAILED\", width / 2 + fontHeight / 2, height / 3 + fontHeight * 2, 0, height);\n\n\t\t\t\tfill(255, 255, 0);\n\t\t\t\ttextAlign(CENTER, TOP);\n\t\t\t\ttext((currentLevel + 1).toString(), 0, height / 3 + fontHeight * 2, width, height);\n\t\t\t\ttext(ship.rod ? \"BONUS \" + bonus : \"NO BONUS\", 0, height / 3 + fontHeight * 4, width, height);\n\t\t\t}\n\n\t\t\tif (time > waitTime && !keys[KEY_THRUST])\n\t\t\t{\n\t\t\t\tif (nextLevel)\n\t\t\t\t\t++currentLevel;\n\t\t\t\tstartLevel();\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase GameState.DESTROYED:\n\t\t\tif (time > waitTime && !keys[KEY_THRUST])\n\t\t\t\tstartLevel();\n\t\t\tbreak;\n\t}\n}\n\n\nwindow['preload'] = function ()\n{\n\t//p5['disableFriendlyErrors'] = true;\n\tfont = loadFont(\"assets/supersimf.ttf\");\n}\n\nwindow['windowResized'] = function ()\n{\n\tpixelDensity(1);\n\tcreateCanvas(windowWidth, windowHeight);\n\tRENDER_SCALE = Math.min(width, height) / 400;\n\ttextSize(Math.ceil(17 * RENDER_SCALE));\n\tfontHeight = Math.ceil(17 * RENDER_SCALE);\n}\n\nwindow['setup'] = function ()\n{\n\n\tEntity.createExplosion = Explosion.create;\n\twindowResized();\n\n\ttextFont(font);\n\n\tstroke(255, 255, 255);\n\tfill(0, 0, 0);\n\tangleMode(DEGREES);\n\n\tLevel.initializeLevels(width, height);\n\n\tnewGame();\n}\n","///// <reference path=\"entity.ts\"/>\nimport { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Explosion } from './explosion';\nimport { Game } from './game';\n\nexport abstract class Particle extends Entity\n{\n\tconstructor(p: Vec2, r: number, public readonly v: Vec2)\n\t{\n\t\tsuper(p, r);\n\t}\n\n\tmove(dt: number)\n\t{\n\t\tthis.p.addScale(this.v, dt);\n\t\treturn true;\n\t}\n\n\tcollideEntities(): Entity | null { return null; }\n\n\tabstract draw(time: number): void;\n\n\t/*\n\tstatic createExplosion(p: Vec2, r: number, c: number)\n\t{\n\t\tconst particles = Game.particles;\n\t\tfor (let i = 0; i < c; i++)\n\t\t{\n\t\t\tconst dir = Vec2.fromAngle(random() * 360);\n\t\t\tconst ex = new Explosion(\n\t\t\t\tp.plus(dir.times(r * random())),\n\t\t\t\tdir.times(random(5, 150)),\n\t\t\t\t[255, random(255), 0],\n\t\t\t\t0.25 + random() * 0.55\n\t\t\t);\n\t\t\tparticles.push(ex);\n\t\t}\n\t}\n\t*/\n}\n\n","///// <reference path=\"boxEntity.ts\"/>\nimport { Vec2 } from './vec2';\nimport { BoxEntity } from './boxEntity';\nimport { Box } from './box';\nimport { Explosion } from './explosion';\nimport { Particle } from './particle';\nimport { Game } from './game';\n\nconst REACTOR_LIFE = 10;\nconst REACTOR_HEAL = 1 / 4;\n\nexport class Reactor extends BoxEntity\n{\n\tinvincible = true;\n\tprivate timeSmoke = 0;\n\ttimeExplode = 0;\n\tlife = REACTOR_LIFE;\n\n\tconstructor(p: Vec2, private ballColor: p5.Color, private color: p5.Color)\n\t{\n\t\tsuper(p, new Box(\n\t\t\tp.x + 6, p.y + 13,\n\t\t\t31, 17\n\t\t));\n\t}\n\n\tdraw(time: number)\n\t{\n\t\tif (this.timeExplode)\n\t\t{\n\t\t\tconst timeExplode = (this.timeExplode - time) * 2;\n\t\t\tif (timeExplode - Math.trunc(timeExplode) > 0.5)\n\t\t\t\treturn;\n\t\t}\n\n\t\tpush();\n\t\ttranslate(this.p.x, this.p.y);\n\n\t\tstroke(0, 255, 0);\n\n\t\tellipse(20, 22, 30, 24);\n\n\t\tfill(0, 0, 0);\n\t\tstroke(this.ballColor);\n\n\t\tbeginShape();\n\t\tvertex(3, 40);\n\t\tvertex(3, 30);\n\t\tvertex(28, 30);\n\t\tvertex(28, 10);\n\t\tvertex(33, 10);\n\t\tvertex(33, 30);\n\t\tvertex(37, 30);\n\t\tvertex(37, 40);\n\t\tendShape();\n\n\t\tstroke(this.color);\n\n\t\tnoFill();\n\t\tbeginShape();\n\t\tvertex(6, 40);\n\t\tvertex(6, 33);\n\t\tvertex(9, 33);\n\t\tvertex(9, 40);\n\t\tendShape();\n\n\t\tpop();\n\t}\n\n\tmove(dt: number)\n\t{\n\t\tif (Game.time > this.timeSmoke && !this.isDamaged())\n\t\t{\n\t\t\tthis.timeSmoke = Game.time + random(0.3, 0.4);\n\n\t\t\tconst grey = random(192, 255);\n\n\t\t\tGame.particles.push(new Explosion(\n\t\t\t\tthis.p.plus(new Vec2(30, 8)),\n\t\t\t\tnew Vec2(0, -60),\n\t\t\t\t[grey, grey, grey],\n\t\t\t\trandom(0.65, 0.85)\n\t\t\t));\n\t\t}\n\n\t\tif (this.life > 0)\n\t\t\tthis.life = Math.min(REACTOR_LIFE, this.life + dt * REACTOR_HEAL);\n\n\t\treturn true;\n\t}\n\n\tdamage(_friendly: boolean)\n\t{\n\t\tif (this.life > 0)\n\t\t{\n\t\t\tthis.life -= 1;\n\n\t\t\tif (this.life < 0)\n\t\t\t\tthis.timeExplode = Game.time + 10;\n\t\t}\n\t\treturn true;\n\t}\n\n\tisDamaged()\n\t{\n\t\treturn this.life < 10;\n\t}\n\n\treset()\n\t{\n\t\tthis.life = REACTOR_LIFE\n\t\tthis.timeExplode = 0;\n\t}\n}\n","///// <reference path=\"entity.ts\"/>\nimport { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Game, TILE_SIZE } from './game';\nimport { Explosion } from './explosion';\n\nexport class Rod extends Entity\n{\n\tva = 0;\n\tv = new Vec2(0, 0);\n\tdir: Vec2 = new Vec2(0, 0);\n\n\tconstructor(p: Vec2, public a: number)\n\t{\n\t\tsuper(p, 0);\n\t}\n\n\treset()\n\t{\n\t\tthis.p = new Vec2(width / 2 + 2 * TILE_SIZE, -2 * TILE_SIZE);\n\t\tthis.v = new Vec2(0, 0);\n\t\tthis.a = -90;\n\t\tthis.va = 0;\n\t}\n\n\tdraw()\n\t{\n\t\tline(Game.ship.p.x, Game.ship.p.y, Game.ball.p.x, Game.ball.p.y);\n\t}\n\n\texplode()\n\t{\n\t\tconst cr = 20;\n\t\tfor (let i = 0; i < cr; i++)\n\t\t{\n\t\t\tconst rp = Game.ship.p.times(i / cr).plus(Game.ball.p.times(1 - i / cr));\n\t\t\tExplosion.create(rp, 3, 1);\n\t\t}\n\t}\n}\n","///// <reference path=\"entity.ts\"/>\n///// <reference path=\"ball.ts\"/>\n\nimport { Vec2 } from './vec2';\nimport { Entity } from './entity';\nimport { Rod } from './rod';\nimport { Bullet, BULLET_SPEED } from './bullet';\nimport { Game } from './game';\n\nconst SHIP_RADIUS = 14.5;\nconst SHIELD_RADIUS = 16;\nconst SHIP_WEIGHT = 0.75;\nconst THRUST = 200;\nconst SHIELD_FUEL_RATE = 1/5;\n\nconst BALL_WEIGHT = 0.75;\n\nconst CABLE_LENGTH = 70;\nconst TOTAL_WEIGHT = SHIP_WEIGHT + BALL_WEIGHT;\nconst BALL_FRACTION = SHIP_WEIGHT / TOTAL_WEIGHT;\nconst SHIP_FRACTION = BALL_WEIGHT / TOTAL_WEIGHT;\nconst BALL_DISTANCE = CABLE_LENGTH * BALL_FRACTION;\nconst SHIP_DISTANCE = CABLE_LENGTH * SHIP_FRACTION;\n\nconst INERTIA = SHIP_WEIGHT * SHIP_DISTANCE * SHIP_DISTANCE +\n\tBALL_WEIGHT * BALL_DISTANCE * BALL_DISTANCE;\n\nconst FRICTION = 1;//0.99;\n\nconst G = 45;\nconst CABLE_FORCE = G / 40;\n\nexport class Ship extends Entity\n{\n\trod: Rod | null = null;\n\n\tdir = new Vec2(0, 0);\n\tv = new Vec2(0, 0);\n\ta = -90;\n\tthrust = false;\n\tshield = false;\n\trefuel = false;\n\tfuel = 10;\n\n\ttimeFire = 0;\n\n\tconstructor()\n\t{\n\t\tsuper(new Vec2(0, 0), SHIP_RADIUS);\n\n\t\tthis.rotateTo(-90);\n\t}\n\n\treset()\n\t{\n\t\tthis.p = Game.level.checkpointPos.clone();\n\t\tthis.v = new Vec2(0, 0);\n\t\tthis.rotateTo(-90);\n\t\tthis.thrust = false;\n\t\tthis.shield = false;\n\n\t\tthis.rod = null;\n\t}\n\n\tdraw()\n\t{\n\t\tfill(0, 0, 0);\n\t\tstroke(255, 255, 0);\n\n\t\tpush();\n\t\ttranslate(this.p.x, this.p.y);\n\n\t\tif (this.refuel && random() < 0.5)\n\t\t{\n\t\t\tline(10, 20, 24, 60);\n\t\t\tline(-10, 20, -24, 60);\n\t\t}\n\n\t\trotate(this.a + 90);\n\n\t\tif (this.shield && random() < 0.5)\n\t\t\tellipse(0, -3, SHIELD_RADIUS * 2, SHIELD_RADIUS * 2);\n\t\telse\n\t\t{\n\n\t\t\tbeginShape();\n\t\t\tvertex(0, -18);\n\t\t\tvertex(9, -1);\n\t\t\tvertex(13, 1);\n\t\t\tvertex(6, 11);\n\t\t\tvertex(3, 8);\n\t\t\tvertex(-3, 8);\n\t\t\tvertex(-6, 11);\n\t\t\tvertex(-13, 1);\n\t\t\tvertex(-9, -1);\n\t\t\tendShape(CLOSE);\n\n\t\t\tif (this.thrust && random() < 0.5)\n\t\t\t{\n\t\t\t\tline(0, 13, 2, 11);\n\t\t\t\tline(0, 13, -2, 11);\n\t\t\t}\n\t\t}\n\n\t\tpop();\n\t}\n\n\trotate(da: number)\n\t{\n\t\tthis.rotateTo(this.a + da);\n\t}\n\n\trotateTo(a: number)\n\t{\n\t\tthis.a = a;\n\t\tthis.dir.x = cos(a);\n\t\tthis.dir.y = sin(a);\n\t}\n\n\tmove(dt: number)\n\t{\n\t\tconst rod = this.rod;\n\t\tif (rod)\n\t\t{\n\t\t\tconst dir = Vec2.fromAngle(rod.a);\n\t\t\tconst playerOffset = dir.times(SHIP_DISTANCE);\n\n\t\t\tif (this.thrust)\n\t\t\t{\n\t\t\t\trod.v.addScale(this.dir, dt * THRUST / SHIP_WEIGHT);\n\n\t\t\t\tconst X = playerOffset;\n\t\t\t\tconst F = this.dir.times(THRUST);\n\t\t\t\tconst torque = X.cross(F);\n\n\t\t\t\trod.va += dt * torque / INERTIA;\n\t\t\t}\n\n\t\t\trod.v.scale(FRICTION);\n\t\t\trod.v.y += dt * G;\n\t\t\trod.p.addScale(rod.v, dt);\n\t\t\trod.p.x = (rod.p.x + Game.levelImg.width) % Game.levelImg.width;\n\t\t\t\n\t\t\trod.a += rod.va;\n\n\t\t\trod.dir = Vec2.fromAngle(rod.a);\n\t\t\tthis.p = rod.p.plus(rod.dir.times(SHIP_DISTANCE));\n\t\t\tGame.ball.p = rod.p.plus(rod.dir.times(-BALL_DISTANCE));\n\n\t\t\tthis.v = rod.v;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.thrust)\n\t\t\t\tthis.v.addScale(this.dir, dt * THRUST / SHIP_WEIGHT);\n\n\t\t\tthis.v.y += dt * G;\n\t\t\tthis.p.addScale(this.v, dt);\n\t\t\tthis.p.x = (this.p.x + Game.levelImg.width) % Game.levelImg.width;\n\t\t}\n\t\treturn true;\n\t}\n\n\tdamage(_friendly: boolean)\n\t{\n\t\tif (_friendly || this.shield)\n\t\t\treturn true;\n\t\tthis.die();\n\t\treturn false;\n\t}\n\n\tkill()\n\t{\n\t\tif (this.rod)\n\t\t{\n\t\t\tthis.rod.kill();\n\t\t\tthis.rod.explode();\t// required because rod isn't in Game.entities.\n\t\t\tthis.rod = null;\n\n\t\t\tGame.ball.kill();\n\t\t}\n\n\t\tsuper.kill();\n\t}\n\n\tdead: Boolean = false;\n\tdie() {\n\t\tthis.dead = true;\n\t}\n\n\tactivateShield(dt: number, wasAttaching: boolean)\n\t{\n\t\tlet shield = false;\n\t\tlet attaching = false;\n\n\t\tif (!this.rod)\n\t\t{\n\t\t\tif (Game.ball.collide(this.p, CABLE_LENGTH))\n\t\t\t{\n\t\t\t\tattaching = true;\n\t\t\t\tshield = true;\n\n\t\t\t\tconst rodDir = Game.ball.p.minus(this.p);\n\t\t\t\tthis.v.addScale(rodDir, dt * CABLE_FORCE);\n\t\t\t}\n\t\t\telse if (wasAttaching)\n\t\t\t{\n\t\t\t\tvar rodDir = this.p.minus(Game.ball.p).unit();\n\t\t\t\tvar rod = this.rod = new Rod(\n\t\t\t\t\tthis.p.minus(rodDir.times(SHIP_DISTANCE)),\n\t\t\t\t\trodDir.angle()\n\t\t\t\t);\n\t\t\t\trod.dir = rodDir;\n\t\t\t\trod.v = this.v.times(1 / 2);\n\t\t\t\trod.va = -this.v.cross(rodDir) * dt;\n\n\t\t\t\tGame.ball.invincible = false;\n\t\t\t}\n\t\t}\n\n\t\tif (!shield) {\n\t\t\tthis.shield = true;\n\t\t\tthis.fuel -= dt * SHIELD_FUEL_RATE;\n\t\t}\n\t\t\n\t\treturn attaching;\n\t}\n\n\tfire(fire: boolean)\n\t{\n\t\tif (fire)\n\t\t{\n\t\t\tif (Game.time - this.timeFire > 0.5)\n\t\t\t{\n\t\t\t\tthis.timeFire = Game.time;\n\t\t\t\tconst p = this.p.plus(this.dir.times(this.r));\n\t\t\t\tconst b = new Bullet(p, this.dir.times(BULLET_SPEED).plus(this.v));\n\t\t\t\tb.friendly = true;\n\t\t\t\tGame.particles.push(b);\n\t\t\t}\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.timeFire = 0.25;\n\t\t}\n\t}\n}\n","///// <reference path=\"particle.ts\"/>\n\nimport { Vec2 } from './vec2';\nimport { Particle } from './particle';\nimport { Game } from './game';\n\nconst STAR_LIFE = 1;\nconst STAR_RADIUS = 1;\n\nexport class Star extends Particle\n{\n\tprivate readonly time: number;\n\n\tconstructor(p: Vec2)\n\t{\n\t\tsuper(p, 0, new Vec2(0, 0));\n\t\tthis.time = Game.time;\n\t}\n\n\tdraw(time: number)\n\t{\n\t\tlet t = (time - this.time) / STAR_LIFE;\n\t\tt = 1 - abs(1 - 2 * t);\n\t\tconst level = 192 * t;\n\t\tstroke(level, level, level);\n\n\t\tconst d = t * 3;\n\t\tline(this.p.x - d, this.p.y, this.p.x + d, this.p.y);\n\t\tline(this.p.x, this.p.y - d, this.p.x, this.p.y + d);\n\t}\n\n\tmove(_dt: number)\n\t{\n\t\treturn (Game.time - this.time) < STAR_LIFE;\n\t}\n}\n","\nexport class Vec2\n{\n\tconstructor(public x: number, public y: number)\n\t{\n\t}\n\n\ttoString()\n\t{\n\t\treturn this.x.toFixed(2) + \",\" + this.y.toFixed(2);\n\t}\n\n\tstatic fromAngle(a: number, r = 1)\n\t{\n\t\treturn new Vec2(r * cos(a), r * sin(a));\n\t}\n\n\tangle()\n\t{\n\t\treturn atan2(this.y, this.x);\n\t}\n\n\tclone()\n\t{\n\t\treturn new Vec2(this.x, this.y);\n\t}\n\n\tadd(other: Vec2)\n\t{\n\t\tthis.x += other.x;\n\t\tthis.y += other.y;\n\t}\n\n\taddScale(other: Vec2, scale: number)\n\t{\n\t\tthis.x += other.x * scale;\n\t\tthis.y += other.y * scale;\n\t}\n\n\tsub(other: Vec2)\n\t{\n\t\tthis.x -= other.x;\n\t\tthis.y -= other.y;\n\t}\n\n\tscale(scale: number)\n\t{\n\t\tthis.x *= scale;\n\t\tthis.y *= scale;\n\t}\n\n\tplus(other: Vec2)\n\t{\n\t\treturn new Vec2(\n\t\t\tthis.x + other.x,\n\t\t\tthis.y + other.y\n\t\t);\n\t}\n\n\tplusScale(other: Vec2, scale: number)\n\t{\n\t\treturn new Vec2(\n\t\t\tthis.x + other.x * scale,\n\t\t\tthis.y + other.y * scale\n\t\t);\n\t}\n\n\tminus(other: Vec2)\n\t{\n\t\treturn new Vec2(\n\t\t\tthis.x - other.x,\n\t\t\tthis.y - other.y\n\t\t);\n\t}\n\n\ttimes(scale: number)\n\t{\n\t\treturn new Vec2(\n\t\t\tthis.x * scale,\n\t\t\tthis.y * scale\n\t\t);\n\t}\n\n\tlen()\n\t{\n\t\treturn sqrt(this.x * this.x + this.y * this.y);\n\t}\n\n\tunit()\n\t{\n\t\treturn this.times(1 / this.len());\n\t}\n\n\tdot(other: Vec2)\n\t{\n\t\treturn this.x * other.x + this.y * other.y;\n\t}\n\n\tcross(other: Vec2)\n\t{\n\t\treturn this.x * other.y - this.y * other.x;\n\t}\n}\n"]}